<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>XPoll</web>
  <name>XPollSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>XPoll.XPollClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1325372400000</creationDate>
  <date>1325372400000</date>
  <contentUpdateDate>1325372400000</contentUpdateDate>
  <version>1.1</version>
  <title>$!doc.getObject('XPoll.XPollClass').getProperty('name').value</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set($ok = $xwiki.jsx.use("XPoll.XPollJSExtension"))
#if($context.action=="edit" || $doc.getValue("status")=="inpreparation")

#if($hasEdit)
$services.localization.render("contrib.xpoll.preparation.hasRight")


#else
$services.localization.render("contrib.xpoll.preparation.noRight")


#end

{{html wiki="true"}}
$xwiki.ssx.use('AppWithinMinutes.ClassSheetGenerator')
#set($discard = $doc.use('XPoll.XPollClass'))
## We don't have access to the form element to set the CSS class for the vertical form layout standard.
(% class="xform" %)
(((
  ; &lt;label for="XPoll.XPollClass_0_name"&gt;$doc.displayPrettyName('name', false, false)&lt;/label&gt;##
    (% class="xHint" %)$msg.get('')
  : $doc.display('name')
  ; &lt;label for="XPoll.XPollClass_0_description"&gt;$doc.displayPrettyName('description', false, false)&lt;/label&gt;##
    (% class="xHint" %)$msg.get('')
  : $doc.display('description')
  ; &lt;label for="XPoll.XPollClass_0_status"&gt;$doc.displayPrettyName('status', false, false)&lt;/label&gt;##
    (% class="xHint" %)$msg.get('')
  : $doc.display('status')
  ; &lt;label for="XPoll.XPollClass_0_proposals"&gt;$doc.displayPrettyName('proposals', false, false)&lt;/label&gt;##
    (% class="xHint" %)$msg.get('')
  : $doc.display('proposals')
)))
{{/html}}
#else

$doc.display('description')

#set($status = $doc.getValue("status"))
#set($proposals = $doc.getValue("proposals"))
#if($status=="inpreparation")

#elseif($status=="active")

#set($voteCount = $util.hashMap)
#foreach($proposal in $proposals)
 #set($ok = $voteCount.put($proposal, 0))
#end
{{html clean="false"}}
&lt;form action="$xwiki.getDocument("XPoll.XPollService").getURL("get", "xpage=plain&amp;outputSyntax=plain&amp;page=$escapetool.url($doc.fullName)")" method="post"&gt;
{{/html}}

|= $services.localization.render("contrib.xpoll.user") #foreach($proposal in $proposals)|= $proposal #end

#set($foundUser = false)
#foreach($obj in $doc.getObjects("XPoll.XPollVoteClass"))
 #set($ok = $doc.use($obj))
 #set($user = $doc.getValue("user"))
 #if($user==$context.user)
  #set($foundUser = true)
 #end
 #set($votes = $doc.getValue("votes"))
|= {{html clean="false"}}$xwiki.getUserName($user){{/html}} #foreach($proposal in $proposals) #set($checked = $votes.contains($proposal)) #if($checked) #set($nbvotes = $voteCount.get($proposal)) #set($nbvotes = $nbvotes + 1) #set($ok = $voteCount.put($proposal, $nbvotes)) #end | {{html clean=="false"}}&lt;input type="checkbox" name="${proposal.hashCode()}" #if($checked)CHECKED#end #if($context.user!=$user) disabled #end /&gt;{{/html}} #end  #if($user==$context.user) |(% style="border: none;" %) {{html clean=false}}&lt;input type="submit" value="$services.localization.render("contrib.xpoll.vote.user.submit")" class="button" onclick="xpollSave(this.form); return false;" /&gt;{{/html}} #end

#end
#if(!$foundUser &amp;&amp; $context.user!="XWiki.XWikiGuest")
|= {{html clean="false"}}$xwiki.getUserName($context.user){{/html}} #foreach($proposal in $proposals) #set($checked = false) | {{html clean=="false"}}&lt;input type="checkbox" name="${proposal.hashCode()}" #if($checked)CHECKED#end /&gt;{{/html}} #end |(% style="border: none;" %) {{html clean=false}}&lt;input type="submit" value="$services.localization.render("contrib.xpoll.vote.user.submit")" class="button" onclick="xpollSave(this.form); return false;" /&gt;{{/html}} 
#end
|= $services.localization.render("contrib.xpoll.numberVotes") #foreach($proposal in $proposals)|= $!voteCount.get($proposal) #end

{{html clean="false"}}
&lt;/form&gt;
{{/html}}

#elseif($status=="finished")
$services.localization.render("contrib.xpoll.finish.message")

#set($voteCount = $util.hashMap)
#foreach($proposal in $proposals)
 #set($ok = $voteCount.put($proposal, 0))
#end

|= $services.localization.render("contrib.xpoll.user") #foreach($proposal in $proposals)|= $proposal #end

#foreach($obj in $doc.getObjects("XPoll.XPollVoteClass"))
 #set($ok = $doc.use($obj))
 #set($user = $doc.getValue("user"))
 #set($votes = $doc.getValue("votes"))
|= {{html clean="false"}}$xwiki.getUserName($user) {{/html}} #foreach($proposal in $proposals) #set($checked = $votes.contains($proposal)) #if($checked) #set($nbvotes = $voteCount.get($proposal)) #set($nbvotes = $nbvotes + 1) #set($ok = $voteCount.put($proposal, $nbvotes)) #end | #if$($context.action=="export") #if($checked) X #end #else {{html clean=="false"}}&lt;input type="checkbox" name="$proposal" #if($checked)CHECKED#end disabled /&gt;{{/html}} #end #end

#end
|= $services.localization.render("contrib.xpoll.numberVotes") #foreach($proposal in $proposals)|= $voteCount.get($proposal) #end

#end
#end
{{/velocity}}</content>
</xwikidoc>
